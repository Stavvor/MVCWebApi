// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MVCWebApi.DataAccessLayer;
using System;

namespace MVCWebApi.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20171114150054_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCWebApi.Models.Adress", b =>
                {
                    b.Property<int>("AdressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<int>("FlatNumber");

                    b.Property<int>("HouseNumber");

                    b.Property<int>("PostalCode");

                    b.Property<string>("Street");

                    b.HasKey("AdressId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("MVCWebApi.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("MVCWebApi.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<int>("Price");

                    b.Property<int>("Test");

                    b.Property<string>("Title");

                    b.HasKey("BookId");

                    b.ToTable("book");
                });

            modelBuilder.Entity("MVCWebApi.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdressId");

                    b.Property<int>("ContactId");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("ClientId");

                    b.HasIndex("AdressId")
                        .IsUnique();

                    b.HasIndex("ContactId")
                        .IsUnique();

                    b.ToTable("client");
                });

            modelBuilder.Entity("MVCWebApi.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("PhoneNumber1");

                    b.Property<int>("PhoneNumber2");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MVCWebApi.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("GenreId");

                    b.ToTable("genres");
                });

            modelBuilder.Entity("MVCWebApi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<DateTime>("RealizationDate");

                    b.Property<DateTime>("SubmitDate");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("MVCWebApi.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.HasKey("PublisherId");

                    b.ToTable("publisher");
                });

            modelBuilder.Entity("MVCWebApi.Models.Client", b =>
                {
                    b.HasOne("MVCWebApi.Models.Adress")
                        .WithOne("Client")
                        .HasForeignKey("MVCWebApi.Models.Client", "AdressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MVCWebApi.Models.Contact")
                        .WithOne("Client")
                        .HasForeignKey("MVCWebApi.Models.Client", "ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MVCWebApi.Models.Order", b =>
                {
                    b.HasOne("MVCWebApi.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
